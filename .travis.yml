dist: xenial
group: edge

stages:
  - name: Tests
  - name: Deployment
    if: branch = master AND type = push AND fork = false

jobs:
  include:

  - stage: Tests
    name: Frontend Tests
    language: node_js
    node_js: 12.16.1
    cache: yarn
    before_install:
    - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.22.0
    - export PATH="$HOME/.yarn/bin:$PATH"
    install:
    - yarn install --frozen-lockfile
    script:
    - yarn format
    - yarn build

  - stage: Tests
    name: Backend Tests
    language: python
    python: '3.8'
    cache: pip
    install:
    - pip install pipenv
    - pipenv install
    script:
    - python manage.py check --deploy
    - python manage.py makemigrations
    - python manage.py migrate
    - python manage.py test

  - stage: Tests
    name: Linting Tests
    language: python
    python: '3.8'
    cache: pip
    install:
    - pip install pre-commit
    script:
    - pre-commit run --all-files

  - stage: Deployment
    name: Frontend Deployment
    language: node_js
    node_js: 12.16.1
    cache: yarn
    before_install:
    - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.22.0
    - export PATH="$HOME/.yarn/bin:$PATH"
    install:
    - yarn install --frozen-lockfile
    script:
    - yarn build
    deploy:
      provider: pages
      skip_cleanup: true
      github_token: "$GITHUB_TOKEN"
      local-dir: build
      on:
      - branch: master
      - type: push

  - stage: Deployment
    name: Backend Deployment
    language: python
    python: '3.8'
    cache: pip
    before_install:
    - openssl aes-256-cbc -K $encrypted_0ac492343b18_key -iv $encrypted_0ac492343b18_iv -in dsc_tiet.enc -out dsc_tiet -d
    - chmod 400 ./dsc_tiet
    install:
    - pip install ansible
    script:
    - ansible-playbook playbooks/deploy.yml
